- unless @openday.ready?
  .alert.alert-error
    %h2=t('openday.errors.not_complete.title')
    %p.lead
      =t('openday.errors.not_complete.reason', email: CONFIG['emails']['support'])
    %p.lead
      %strong=t('openday.errors.not_complete.contact', email: CONFIG['emails']['support'])
- else
  %h1
    =t('registration.for')
    =@openday.name
  .form-reg
    - if @registrant.errors.count > 0
      %p.lead.error
        %strong=t('registration.register.contains_errors', count: @registrant.errors.count)
      %ul.lead.error_list
        - @registrant.errors.full_messages.each do |msg|
          %li=msg

    =form_for @registrant, :url => { :action => "create" } do |f|

      %h2.page-header=t('registration.personal_information.title')
      .form-group.row
        = f.label :name, t('registration.personal_information.name'), class: 'col-sm-2 col-xs-12'
        = f.text_field :name, class: 'form-custom col-sm-6 col-xs-12'
      .form-group.row
        = f.label :prefix, t('registration.personal_information.prefix'), class: 'col-sm-2 col-xs-12'
        = f.text_field :prefix, class: 'form-custom col-sm-6 col-xs-12'
      .form-group.row
        = f.label :surname, t('registration.personal_information.surname'), class: 'col-sm-2 col-xs-12'
        = f.text_field :surname, class: 'form-custom col-sm-6 col-xs-12'
    
      %h2.page-header=t('registration.contact_information.title')  
      .form-group.row
        = f.label :email, t('registration.contact_information.email'), class: 'col-sm-2 col-xs-12'
        = f.text_field :email, class: 'form-custom col-sm-6 col-xs-12'
      .form-group.row
        = f.label :address1, t('registration.contact_information.address1'), class: 'col-sm-2 col-xs-12'
        = f.text_field :address1, class: 'form-custom col-sm-6 col-xs-12'
      .form-group.row
        = f.label :address2, t('registration.contact_information.address2'), class: 'col-sm-2 col-xs-12'
        = f.text_field :address2, class: 'form-custom col-sm-6 col-xs-12'
      .form-group.row
        = f.label :city, t('registration.contact_information.city'), class: 'col-sm-2 col-xs-12'
        = f.text_field :city, class: 'form-custom col-sm-6 col-xs-12'
      .form-group.row
        = f.label :state, t('registration.contact_information.state'), class: 'col-sm-2 col-xs-12'
        = f.text_field :state, class: 'form-custom col-sm-6 col-xs-12'
      .form-group.row
        = f.label :country, t('registration.contact_information.country'), class: 'col-sm-2 col-xs-12'
        = f.text_field :country, class: 'form-custom col-sm-6 col-xs-12'
      .form-group.row
        = f.label :postal_code, t('registration.contact_inforamtion.postal_code'), class: 'col-sm-2 col-xs-12'
        = f.text_field :postal_code, class: 'form-custom col-sm-6 col-xs-12'
      
      %h2.page-header=t('registration.companions.title')
      .form-group.row
        %p=t('registration.companions.description')  
        = f.label :companions, t('registration.companions.title'), class: 'col-sm-2 col-xs-12'
        = f.select :companions, options_for_select((0..(CONFIG['registration']['companions_max'])).step(1).to_a.map{|s| ["#{s}", s]},  :selected => (params['registrant']['companions'] unless params['registrant'].nil?)), { include_blank: false }, class: 'form-custom col-sm-6 col-xs-12'    

      %h2.page-header=t('registration.register.title')
      %p=t('registration.register.description')
      %p=t('registration.register.limit', min: CONFIG['registration']['limit_min'].to_s, max: CONFIG['registration']['limit_max'].to_s)
      %p=t('registration.register.notice')
      - @openday.openday_faculties.each do |faculty|
        %h3=faculty.faculty.name
        - faculty.openday_programmes.each do |programme|
          %h4
            - if(params["programme"])
              %input.time_enable{id: 'programme'+programme.id.to_s+'-enable', type: 'checkbox', 'programme' => 'programme'+programme.id.to_s, name: 'programme['+programme.id.to_s+']', value: '0', :checked => ('true' unless params['programme'][programme.id.to_s].nil?)}
            - else
              %input.time_enable{id: 'programme'+programme.id.to_s+'-enable', type: 'checkbox', 'programme' => 'programme'+programme.id.to_s, name: 'programme['+programme.id.to_s+']', value: '0'}  
            =programme.programme.name
          %div.programme-block{id: 'programme'+programme.id.to_s+'-block'}
            - programme.openday_timeslots.each do |timeslot|
              - if(params["programme"])
                %input.time{id: 'timeslot['+timeslot.id.to_s+']', type: 'radio', 'time_from' => timeslot.time_from.    strftime('%H%M'), 'time_till' => timeslot.time_till.strftime('%H%M'), 'programme' => 'programme'+programme.id.to_s ,name: 'programme['+programme.id.to_s+']', value: timeslot.id.to_s, :checked => ('true' if params["programme"][programme.id.to_s] == timeslot.id.to_s)}
              - else
                %input.time{id: 'timeslot['+timeslot.id.to_s+']', type: 'radio', 'time_from' => timeslot.time_from.    strftime('%H%M'), 'time_till' => timeslot.time_till.strftime('%H%M'), 'programme' => 'programme'+programme.id.to_s ,name: 'programme['+programme.id.to_s+']', value: timeslot.id.to_s}
              %label{for: 'timeslot['+timeslot.id.to_s+']'}
                ="#{timeslot.time_from.strftime('%H:%M')} - #{timeslot.time_till.strftime('%H:%M')}"
              %input{type: "hidden", id: "programme"+programme.id.to_s+"-previous"}
      
              %br

      %hr.alt
      .form-group.row
        = f.label :year, t('registration.register.year'), class: 'col-sm-2 col-xs-12'
        = f.select :year, options_for_select((DateTime.now.year..(DateTime.now.year+3)).step(1).to_a.push("other").map{|s| ["in #{s}", s.to_i]}, :selected => (params['registrant']['year'] unless params['registrant'].nil?)), { include_blank: true }, class: 'form-custom col-sm-6 col-xs-12'


      = hidden_field_tag :openday_id, @openday.id 
      = f.submit "Submit"

:javascript
  var clicks = new Array();

  $("input.time_enable").click(function () {
    if ($(this).prop("checked") == false) {
      programme_name = $(this).attr("programme");
      block_name = programme_name + "-block";
      prev = programme_name + "-previous"
      $('#' + block_name + ' :input').prop('checked', false);;
      
      oldvalue = $('#' + prev).attr('value');
      dropTime(oldvalue);
      reloadTimes();   
    }
  });
  
  $("input.time").click(function () {
      btn = $(this);
      from = btn.attr('time_from');
      till = btn.attr('time_till');
      
      enable = $(this).attr("programme") + "-enable"
      $('#' + enable).prop('checked', true);;
      prev = $(this).attr("programme") + "-previous"
      oldvalue = $('#' + prev).attr('value');
      dropTime(oldvalue);
  
      newvalue = from + '-' + till;
      clicks.push(newvalue);
      $('#' + prev).attr('value', newvalue);
  
      reloadTimes();
  });
  
  function reloadTimes() {
    $("input.time").each(function (index) {
          $(this).prop("disabled", false);;
      });
  
      $.each(clicks, function (index, value) {
          time = (value.split("-"));
          diableTimeslots(time[0], time[1]);
      });
  
      $("input:checked").each(function (index) {
          $(this).prop("disabled", false);
      });   
  }
  
  function diableTimeslots(from, till) {
    $("input.time").each(function (index) {
      if ((from <= $(this).attr('time_from') && $(this).attr('time_from') <= till)       || (from <= $(this).attr('time_till') && $(this).attr('time_till') <= till))       {
          $(this).prop("disabled", true);
      }
    });
  }
  
  function dropTime(time) {
      index = $.inArray(time, clicks);
      if (index > -1) {
          clicks.splice(index, 1);
      }
  }      